{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/Search-box/serach-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BAEP,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCRlBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMI,SAASK,KAAI,SAACL,GAAD,OAChB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,WCWrBK,G,YAfG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACd,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6CHG,E,kDA9CX,aAAe,IAAD,8BACV,gBAiBJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CACVC,YAAaF,EAAEG,OAAOC,SAlB1B,EAAKC,MAAQ,CACTjB,SAAU,GACVc,YAAa,IAJP,E,qDAUd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,EAAKT,SAAS,CAAEb,SAAUsB,S,oBAUtC,WACI,MAAkCC,KAAKN,MAA/BjB,EAAR,EAAQA,SAAUc,EAAlB,EAAkBA,YACZU,EAAmBxB,EAASyB,QAAO,SAACzB,GAAD,OACrCA,EAASE,KACJwB,cACAC,SAASb,EAAYc,wBAE9B,OACI,sBAAK/B,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CACIU,YAAY,kBACZC,aAAce,KAAKf,eAEvB,gCACI,cAAC,EAAD,CAAUR,SAAUwB,IADxB,e,GAvCEK,aCQHC,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBb,MACjB,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFxBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.64fbf74f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                alt=\"monster\"\r\n                src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}\r\n            />\r\n            <h2>{props.monsters.name}</h2>\r\n            <p>{props.monsters.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.styles.css'\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monsters) => (\r\n                <Card key={monsters.id} monsters={monsters} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport './search-box.styles.css'\n\nconst Searchbox = ({ placeholder, handleChange }) => (\n    <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n)\n\n// (e) => {\n//     this.setState({\n//         searchField: e.target.value,\n//     })\n// }\n\nexport default Searchbox\n","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\n// import logo from './logo.svg'\nimport './App.css'\nimport Searchbox from './components/Search-box/serach-box.component'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            monsters: [],\n            searchField: '',\n        }\n\n        // this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then((response) => response.json())\n            .then((users) => {\n                this.setState({ monsters: users })\n            })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            searchField: e.target.value,\n        })\n    }\n\n    render() {\n        const { monsters, searchField } = this.state\n        const filteredMonsters = monsters.filter((monsters) =>\n            monsters.name\n                .toLowerCase()\n                .includes(searchField.toLocaleLowerCase())\n        )\n        return (\n            <div className=\"App\">\n                <h1>Monster Rolodex</h1>\n                <Searchbox\n                    placeholder=\"search monsters\"\n                    handleChange={this.handleChange}\n                ></Searchbox>\n                <div>\n                    <CardList monsters={filteredMonsters}></CardList>\\\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}